language: minimal
if: head_branch =~ ^v1.2beta_api_oci_spec_update$ OR branch = v1.2beta_api_oci_spec

services:
  - docker
  
env:
  global:
    - HEROKU_APP_NG_WEBUI_DB_2="ng-portal-2"
    - HEROKU_APP_NG_WEBUI_DB_4="ng-portal-4"
    - HEROKU_REG="registry.heroku.com"
    - EC_REV_V1_2BETA="v1.2beta.reiwa.2"
    - EC_OCI_IMG="enterpriseconnect/api:v1.2beta"
    - GITHUB_TAG="ghcr.io/ec-release/oci/api:v1.2beta"
    - GITHUB_REGISTRY="https://ghcr.io"
    - GITHUB_USR="ayasuda-ge"
  
before_install: >-
  source <(wget -O - https://cli-assets.heroku.com/install-ubuntu.sh) &&
  heroku update
  
script:
  - cd ./spec/api && docker build -t ${EC_OCI_IMG} --build-arg EC_REV_V1_2BETA=${EC_REV_V1_2BETA} . && cd -
   
deploy:
  - provider: script
    skip_cleanup: true
    #
    # temp comment out heroku push due to the quota limitation
    #
    #script: >-
    #  echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin &&
    #  docker push $EC_OCI_IMG &&
    #  docker tag $EC_OCI_IMG $HEROKU_REG/$HEROKU_APP_NG_WEBUI_DB_2/web &&
    #  docker tag $EC_OCI_IMG $HEROKU_REG/$HEROKU_APP_NG_WEBUI_DB_4/web &&
    #  docker tag $EC_OCI_IMG $GITHUB_TAG &&
    #  docker images &&
    #  heroku container:login &&
    #  sleep 5 &&
    #  docker push $HEROKU_REG/$HEROKU_APP_NG_WEBUI_DB_2/web &&
    #  docker push $HEROKU_REG/$HEROKU_APP_NG_WEBUI_DB_4/web &&
    #  sleep 5 &&
    #  heroku container:release web -a $HEROKU_APP_NG_WEBUI_DB_2 &&
    #  sleep 5 &&
    #  heroku container:release web -a $HEROKU_APP_NG_WEBUI_DB_4 &&
    #  echo $GITHUB_DOCKER_TKN_API_V1_2BETA | docker login $GITHUB_REGISTRY -u $GITHUB_USR --password-stdin &&
    #  docker push $GITHUB_TAG
    script: >-
      echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin &&
      docker push $EC_OCI_IMG &&
      docker tag $EC_OCI_IMG $GITHUB_TAG &&
      docker images &&
      echo $GITHUB_DOCKER_TKN_API_V1_2BETA | docker login $GITHUB_REGISTRY -u $GITHUB_USR --password-stdin &&
      docker push $GITHUB_TAG
    on:
      branch: v1.2beta_api_oci_spec

#after_deploy: >-
  #docker rmi ${EC_OCI_IMG} -f && docker run -it ${EC_OCI_IMG} -ver
notifications:  
  email:  
    recipients:  
    - ec-research@ge.com
    #- enterprise-connect@ge.com
    on_success: always  
    on_failure: always
