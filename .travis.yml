language: minimal
if: head_branch =~ ^v1_svc_oci_spec_update$ OR branch = v1_svc_oci_spec

services:
  - docker  

env:
  global:
    - SERVICE_BRANCH=v1beta
    - ENV=v1beta.sendai.1080
    - EC_REV=v1beta
    - ADMIN_USR=admin
    - ZAC_UAA=https://predix-uaa.run.aws-usw02-dev.ice.predix.io/oauth/token
    - ZAC_URL=https://predix-zac.run.aws-usw02-dev.ice.predix.io/v1/authorization/
    - ZAC_SERVICE_ID=enterprise-connect
    - NUREGO_FEATURE_ID=api_calls
    - NUREGO_TKN_INS=ins_01b6-765e-446e-b0e5-d958ac2afb72
    - NUREGO_USAGE_FEATURE_ID=data_usage
    - NUREGO_ENDPOINT=https://am-staging.nurego.com/v1
    - NUREGO_TKN_URL=https://am-staging.nurego.com/v1/auth/token
    
before-script:
  - chmod 775 ./spec/service/envs.sh
    
script:
  - cd ./spec/service
  - docker build --build-arg EC_PRVT_KEY=${EC_PRVT_KEY} --build-arg EC_PUB_KEY=${EC_PUB_KEY} -t enterpriseconnect/service:v1beta .
  - source ./envs.sh
  - docker run --rm -d --name service --env-file env.list.sample enterpriseconnect/service:v1beta && sleep 10 && docker logs service
  
deploy:
  - provider: script
    skip_cleanup: true
    script: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin && docker push enterpriseconnect/service:v1beta
    on:
      branch: v1beta_svc_oci_spec

after_deploy: docker rmi enterpriseconnect/service:v1beta -f && docker run -it enterpriseconnect/service:v1beta

notifications:  
  email:  
    recipients:  
    - ec-research@ge.com
    - gayatri.tagade@ge.com
    - apolo.yasuda@ge.com
    on_success: always  
    on_failure: always
